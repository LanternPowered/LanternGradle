buildscript {
    repositories {
        jcenter()
        maven {
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.4.0'
    }
}

plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'eclipse'
    id 'idea'
    id "com.github.hierynomus.license" version "0.13.1"
}

// Environment variables for the build set by the build server
ext {
    if (!project.hasProperty('artifactory_contextUrl')) artifactory_contextUrl = System.getenv('artifactory_contextUrl')
    if (!project.hasProperty('artifactory_username')) artifactory_username = System.getenv('artifactory_username')
    if (!project.hasProperty('artifactory_password')) artifactory_password = System.getenv('artifactory_password')
    buildNumber = System.env.BUILD_NUMBER ?: System.env.TRAVIS_BUILD_NUMBER ?: '0'
    ciSystem = System.env.CI_SYSTEM ?: (System.env.TRAVIS ? 'travis' : null)
    commit = System.env.GIT_COMMIT ?: System.env.TRAVIS_COMMIT
    branch = System.env.GIT_BRANCH ?: System.env.TRAVIS_BRANCH
}

defaultTasks 'clean', 'licenseFormat', 'build'

apply plugin: 'java'
    
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

group = 'org.lanternpowered'
version = '1.0.0-SNAPSHOT'
archivesBaseName = project.name.toLowerCase()

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    compile 'org.apache.logging.log4j:log4j-core:2.5'
    compile 'org.ow2.asm:asm-all:5.0.3'
}

jar.manifest.attributes(
        'Created-By': "${System.properties['java.version']} (${System.properties['java.vm.vendor']})",
        'Implementation-Title': project.name,
        'Implementation-Version': project.version,
        'Implementation-Vendor': project.organization
)

processResources {
    from 'LICENSE.txt'
}

if (artifactory_contextUrl && artifactory_username && artifactory_password) {
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.artifactory'

    publishing {
        publications {
            thePublication(MavenPublication) {
                artifact jar
                artifactId archivesBaseName
            }
        }
    }

    artifactory {
        contextUrl = "${artifactory_contextUrl}"
        publish {
            repository {
                repoKey = project.version.contains("SNAPSHOT") ? 'libs-snapshot-local' : 'libs-release-local'
                username = "${artifactory_username}"
                password = "${artifactory_password}"
                maven = true
            }
            defaults {
                publications('thePublication')
                publishArtifacts = true
            }
        }

        resolve {
            repository {
                repoKey = 'repo'
                username = "${artifactory_username}"
                password = "${artifactory_password}"
                maven = true
            }
        }
    }
    clientConfig.setIncludeEnvVars(true)
    clientConfig.info.setBuildNumber(buildNumber)
    if (ciSystem) clientConfig.info.addEnvironmentProperty('ci-system', ciSystem)
}

license {
    header project.file('HEADER.txt')
    sourceSets = project.sourceSets
    include '**/*.java'
    include '**/*.groovy'

    strictCheck true
    ignoreFailures = false

    ext {
        name = project.name
        url = project.url
        organization = project.organization
    }

    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

// Gradle version used for generating the Gradle wrapper
task wrapper(type: Wrapper) {
    gradleVersion = '2.14.1'
}
